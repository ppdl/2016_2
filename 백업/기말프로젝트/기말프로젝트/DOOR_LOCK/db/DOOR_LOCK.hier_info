|DOOR_LOCK
reset => reset.IN3
door => door.IN1
clk => clk.IN5
key_col[0] <= KEYPAD_MODULE:module_key.port0
key_col[1] <= KEYPAD_MODULE:module_key.port0
key_col[2] <= KEYPAD_MODULE:module_key.port0
key_col[3] <= KEYPAD_MODULE:module_key.port0
key_row[0] => key_row[0].IN1
key_row[1] => key_row[1].IN1
key_row[2] => key_row[2].IN1
key_row[3] => key_row[3].IN1
seg_data[0] <= SEVEN_SEGMENT_CONTROLLER:sevenM.port9
seg_data[1] <= SEVEN_SEGMENT_CONTROLLER:sevenM.port9
seg_data[2] <= SEVEN_SEGMENT_CONTROLLER:sevenM.port9
seg_data[3] <= SEVEN_SEGMENT_CONTROLLER:sevenM.port9
seg_data[4] <= SEVEN_SEGMENT_CONTROLLER:sevenM.port9
seg_data[5] <= SEVEN_SEGMENT_CONTROLLER:sevenM.port9
seg_data[6] <= SEVEN_SEGMENT_CONTROLLER:sevenM.port9
seg_data[7] <= SEVEN_SEGMENT_CONTROLLER:sevenM.port9
seg_pos[0] <= SEVEN_SEGMENT_CONTROLLER:sevenM.port10
seg_pos[1] <= SEVEN_SEGMENT_CONTROLLER:sevenM.port10
seg_pos[2] <= SEVEN_SEGMENT_CONTROLLER:sevenM.port10
seg_pos[3] <= SEVEN_SEGMENT_CONTROLLER:sevenM.port10
seg_pos[4] <= SEVEN_SEGMENT_CONTROLLER:sevenM.port10
seg_pos[5] <= SEVEN_SEGMENT_CONTROLLER:sevenM.port10
led[7] <= LED_OUTPUT_CONTROLLER:led_control.port4
led[6] <= LED_OUTPUT_CONTROLLER:led_control.port4
led[5] <= LED_OUTPUT_CONTROLLER:led_control.port4
led[4] <= LED_OUTPUT_CONTROLLER:led_control.port4
led[3] <= LED_OUTPUT_CONTROLLER:led_control.port4
led[2] <= LED_OUTPUT_CONTROLLER:led_control.port4
led[1] <= LED_OUTPUT_CONTROLLER:led_control.port4
led[0] <= LED_OUTPUT_CONTROLLER:led_control.port4
buzz <= SOUND_GENERATOR_WITH_BUZZER:buzzerM.port4


|DOOR_LOCK|MAIN_FSM:main_machin
reset => reset_time_one_minute.OUTPUTSELECT
reset => set_one_minute_end.OUTPUTSELECT
reset => one_minute_lock_state.OUTPUTSELECT
reset => one_minute_lock_state.OUTPUTSELECT
reset => one_minute_lock_state.OUTPUTSELECT
reset => one_minute_lock_state.OUTPUTSELECT
reset => one_minute_lock_state.OUTPUTSELECT
reset => one_minute_lock_state.OUTPUTSELECT
reset => lock_state.OUTPUTSELECT
reset => lock_state.OUTPUTSELECT
reset => lock_state.OUTPUTSELECT
reset => lock_state.OUTPUTSELECT
reset => lock_state.OUTPUTSELECT
reset => lock_state.OUTPUTSELECT
reset => lock_state.OUTPUTSELECT
reset => lock_state.OUTPUTSELECT
reset => number_of_lock.OUTPUTSELECT
reset => number_of_lock.OUTPUTSELECT
reset => number_of_lock.OUTPUTSELECT
reset => set_lock_end.OUTPUTSELECT
reset => set_pipo_end.OUTPUTSELECT
reset => pipo_state.OUTPUTSELECT
reset => pipo_state.OUTPUTSELECT
reset => pipo_state.OUTPUTSELECT
reset => pipo_state.OUTPUTSELECT
reset => pipo_state.OUTPUTSELECT
reset => pipo_state.OUTPUTSELECT
reset => led_on.OUTPUTSELECT
reset => fail_state.OUTPUTSELECT
reset => fail_state.OUTPUTSELECT
reset => fail_state.OUTPUTSELECT
reset => fail_state.OUTPUTSELECT
reset => fail_state.OUTPUTSELECT
reset => fail_state.OUTPUTSELECT
reset => fail_state.OUTPUTSELECT
reset => fail_state.OUTPUTSELECT
reset => reset_time_for_fail.OUTPUTSELECT
reset => number_of_fail.OUTPUTSELECT
reset => number_of_fail.OUTPUTSELECT
reset => number_of_fail.OUTPUTSELECT
reset => set_fail_end.OUTPUTSELECT
reset => open_state.OUTPUTSELECT
reset => open_state.OUTPUTSELECT
reset => open_state.OUTPUTSELECT
reset => open_state.OUTPUTSELECT
reset => open_state.OUTPUTSELECT
reset => open_state.OUTPUTSELECT
reset => open_state.OUTPUTSELECT
reset => set_open_end.OUTPUTSELECT
reset => reset_time_to_close.OUTPUTSELECT
reset => password_check_state.OUTPUTSELECT
reset => password_check_state.OUTPUTSELECT
reset => password_check_state.OUTPUTSELECT
reset => password_check_state.OUTPUTSELECT
reset => password_check_state.OUTPUTSELECT
reset => password_check_state.OUTPUTSELECT
reset => password_check_state.OUTPUTSELECT
reset => password_check_state.OUTPUTSELECT
reset => password_check_state.OUTPUTSELECT
reset => password_check_state.OUTPUTSELECT
reset => password_check_state.OUTPUTSELECT
reset => password_check_state.OUTPUTSELECT
reset => password_check_state.OUTPUTSELECT
reset => password_check_state.OUTPUTSELECT
reset => password_check_state.OUTPUTSELECT
reset => password_check_state.OUTPUTSELECT
reset => password_check_state.OUTPUTSELECT
reset => password_check_state.OUTPUTSELECT
reset => password_check_state.OUTPUTSELECT
reset => password_check_state.OUTPUTSELECT
reset => password_check_state.OUTPUTSELECT
reset => password_check_state.OUTPUTSELECT
reset => password_check_state.OUTPUTSELECT
reset => set_pass_end.OUTPUTSELECT
reset => set_check_end.OUTPUTSELECT
reset => set_check_state.OUTPUTSELECT
reset => set_check_state.OUTPUTSELECT
reset => set_check_state.OUTPUTSELECT
reset => set_check_state.OUTPUTSELECT
reset => set_check_state.OUTPUTSELECT
reset => set_check_state.OUTPUTSELECT
reset => set_check_state.OUTPUTSELECT
reset => set_check_state.OUTPUTSELECT
reset => set_check_state.OUTPUTSELECT
reset => set_check_state.OUTPUTSELECT
reset => set_check_state.OUTPUTSELECT
reset => set_check_state.OUTPUTSELECT
reset => new.OUTPUTSELECT
reset => set_read_end.OUTPUTSELECT
reset => set_read_state.OUTPUTSELECT
reset => set_read_state.OUTPUTSELECT
reset => set_read_state.OUTPUTSELECT
reset => set_read_state.OUTPUTSELECT
reset => set_read_state.OUTPUTSELECT
reset => set_read_state.OUTPUTSELECT
reset => set_read_state.OUTPUTSELECT
reset => set_read_state.OUTPUTSELECT
reset => set_read_state.OUTPUTSELECT
reset => set_read_state.OUTPUTSELECT
reset => set_read_state.OUTPUTSELECT
reset => set_read_state.OUTPUTSELECT
reset => set_read_state.OUTPUTSELECT
reset => set_read_state.OUTPUTSELECT
reset => set_read_state.OUTPUTSELECT
reset => set_read_state.OUTPUTSELECT
reset => set_read_state.OUTPUTSELECT
reset => set_read_state.OUTPUTSELECT
reset => set_read_state.OUTPUTSELECT
reset => main_state.OUTPUTSELECT
reset => main_state.OUTPUTSELECT
reset => main_state.OUTPUTSELECT
reset => main_state.OUTPUTSELECT
reset => main_state.OUTPUTSELECT
reset => main_state.OUTPUTSELECT
reset => main_state.OUTPUTSELECT
reset => main_state.OUTPUTSELECT
reset => main_state.OUTPUTSELECT
reset => main_state.OUTPUTSELECT
reset => reset_read_end.OUTPUTSELECT
reset => reset_check_end.OUTPUTSELECT
reset => reset_fail_end.OUTPUTSELECT
reset => reset_pipo_end.OUTPUTSELECT
reset => reset_pass_end.OUTPUTSELECT
reset => reset_lock_end.OUTPUTSELECT
reset => reset_one_minute_end.OUTPUTSELECT
reset => reset_open_end.OUTPUTSELECT
reset => close_state.OUTPUTSELECT
reset => close_state.OUTPUTSELECT
reset => close_state.OUTPUTSELECT
door => always5.IN1
door => open_state.OUTPUTSELECT
door => open_state.OUTPUTSELECT
door => open_state.OUTPUTSELECT
door => open_state.OUTPUTSELECT
door => open_state.OUTPUTSELECT
door => open_state.OUTPUTSELECT
door => open_state.OUTPUTSELECT
clk => clk.IN3
key_value[0] => p0.DATAB
key_value[0] => p1.DATAB
key_value[0] => p2.DATAB
key_value[0] => p3.DATAB
key_value[0] => p4.DATAB
key_value[0] => p5.DATAB
key_value[0] => n0.DATAB
key_value[0] => n1.DATAB
key_value[0] => n2.DATAB
key_value[0] => n3.DATAB
key_value[0] => n4.DATAB
key_value[0] => n5.DATAB
key_value[1] => p0.DATAB
key_value[1] => p1.DATAB
key_value[1] => p2.DATAB
key_value[1] => p3.DATAB
key_value[1] => p4.DATAB
key_value[1] => p5.DATAB
key_value[1] => n0.DATAB
key_value[1] => n1.DATAB
key_value[1] => n2.DATAB
key_value[1] => n3.DATAB
key_value[1] => n4.DATAB
key_value[1] => n5.DATAB
key_value[2] => p0.DATAB
key_value[2] => p1.DATAB
key_value[2] => p2.DATAB
key_value[2] => p3.DATAB
key_value[2] => p4.DATAB
key_value[2] => p5.DATAB
key_value[2] => n0.DATAB
key_value[2] => n1.DATAB
key_value[2] => n2.DATAB
key_value[2] => n3.DATAB
key_value[2] => n4.DATAB
key_value[2] => n5.DATAB
key_value[3] => p0.DATAB
key_value[3] => p1.DATAB
key_value[3] => p2.DATAB
key_value[3] => p3.DATAB
key_value[3] => p4.DATAB
key_value[3] => p5.DATAB
key_value[3] => n0.DATAB
key_value[3] => n1.DATAB
key_value[3] => n2.DATAB
key_value[3] => n3.DATAB
key_value[3] => n4.DATAB
key_value[3] => n5.DATAB
key_number => p0.OUTPUTSELECT
key_number => p0.OUTPUTSELECT
key_number => p0.OUTPUTSELECT
key_number => p0.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => index2.OUTPUTSELECT
key_number => index2.OUTPUTSELECT
key_number => index2.OUTPUTSELECT
key_number => index2.OUTPUTSELECT
key_number => index2.OUTPUTSELECT
key_number => index2.OUTPUTSELECT
key_number => index2.OUTPUTSELECT
key_number => p1.OUTPUTSELECT
key_number => p1.OUTPUTSELECT
key_number => p1.OUTPUTSELECT
key_number => p1.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => index2.OUTPUTSELECT
key_number => index2.OUTPUTSELECT
key_number => p2.OUTPUTSELECT
key_number => p2.OUTPUTSELECT
key_number => p2.OUTPUTSELECT
key_number => p2.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => index2.OUTPUTSELECT
key_number => p3.OUTPUTSELECT
key_number => p3.OUTPUTSELECT
key_number => p3.OUTPUTSELECT
key_number => p3.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => index2.OUTPUTSELECT
key_number => p4.OUTPUTSELECT
key_number => p4.OUTPUTSELECT
key_number => p4.OUTPUTSELECT
key_number => p4.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => index2.OUTPUTSELECT
key_number => p5.OUTPUTSELECT
key_number => p5.OUTPUTSELECT
key_number => p5.OUTPUTSELECT
key_number => p5.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => index2.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => n0.OUTPUTSELECT
key_number => n0.OUTPUTSELECT
key_number => n0.OUTPUTSELECT
key_number => n0.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => n1.OUTPUTSELECT
key_number => n1.OUTPUTSELECT
key_number => n1.OUTPUTSELECT
key_number => n1.OUTPUTSELECT
key_number => index.OUTPUTSELECT
key_number => index.OUTPUTSELECT
key_number => index.OUTPUTSELECT
key_number => index.OUTPUTSELECT
key_number => index.OUTPUTSELECT
key_number => index.OUTPUTSELECT
key_number => index.OUTPUTSELECT
key_number => index.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => n2.OUTPUTSELECT
key_number => n2.OUTPUTSELECT
key_number => n2.OUTPUTSELECT
key_number => n2.OUTPUTSELECT
key_number => index.OUTPUTSELECT
key_number => index.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => n3.OUTPUTSELECT
key_number => n3.OUTPUTSELECT
key_number => n3.OUTPUTSELECT
key_number => n3.OUTPUTSELECT
key_number => index.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => n4.OUTPUTSELECT
key_number => n4.OUTPUTSELECT
key_number => n4.OUTPUTSELECT
key_number => n4.OUTPUTSELECT
key_number => index.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => n5.OUTPUTSELECT
key_number => n5.OUTPUTSELECT
key_number => n5.OUTPUTSELECT
key_number => n5.OUTPUTSELECT
key_number => index.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => index.OUTPUTSELECT
key_number => main_state.OUTPUTSELECT
key_number => main_state.OUTPUTSELECT
key_number => main_state.OUTPUTSELECT
key_number => main_state.OUTPUTSELECT
key_number => main_state.OUTPUTSELECT
key_number => main_state.OUTPUTSELECT
key_number => main_state.OUTPUTSELECT
key_number => main_state.OUTPUTSELECT
key_number => main_state.OUTPUTSELECT
key_number => main_state.OUTPUTSELECT
key_number => Selector109.IN14
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => always9.IN1
key_number => Selector108.IN7
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => set_read_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_number => password_check_state.OUTPUTSELECT
key_star => password_check_state.OUTPUTSELECT
key_star => password_check_state.OUTPUTSELECT
key_star => password_check_state.OUTPUTSELECT
key_star => password_check_state.OUTPUTSELECT
key_star => password_check_state.OUTPUTSELECT
key_star => password_check_state.OUTPUTSELECT
key_star => password_check_state.OUTPUTSELECT
key_star => password_check_state.OUTPUTSELECT
key_star => password_check_state.OUTPUTSELECT
key_star => password_check_state.OUTPUTSELECT
key_star => password_check_state.OUTPUTSELECT
key_star => password_check_state.OUTPUTSELECT
key_star => password_check_state.OUTPUTSELECT
key_star => password_check_state.OUTPUTSELECT
key_star => password_check_state.OUTPUTSELECT
key_star => password_check_state.OUTPUTSELECT
key_star => password_check_state.OUTPUTSELECT
key_star => password_check_state.OUTPUTSELECT
key_star => password_check_state.OUTPUTSELECT
key_star => password_check_state.OUTPUTSELECT
key_star => password_check_state.OUTPUTSELECT
key_star => password_check_state.OUTPUTSELECT
key_star => password_check_state.OUTPUTSELECT
key_star => password_check_state.OUTPUTSELECT
key_star => password_check_state.OUTPUTSELECT
key_star => password_check_state.OUTPUTSELECT
key_star => password_check_state.OUTPUTSELECT
key_star => password_check_state.OUTPUTSELECT
key_star => password_check_state.OUTPUTSELECT
key_star => password_check_state.OUTPUTSELECT
key_star => password_check_state.OUTPUTSELECT
key_star => password_check_state.OUTPUTSELECT
key_star => password_check_state.OUTPUTSELECT
key_star => password_check_state.OUTPUTSELECT
key_star => always8.IN1
key_star => main_state.OUTPUTSELECT
key_star => main_state.OUTPUTSELECT
key_star => main_state.OUTPUTSELECT
key_star => main_state.OUTPUTSELECT
key_star => main_state.OUTPUTSELECT
key_star => main_state.OUTPUTSELECT
key_star => main_state.OUTPUTSELECT
key_star => main_state.OUTPUTSELECT
key_star => main_state.OUTPUTSELECT
key_star => main_state.OUTPUTSELECT
key_star => close_state.OUTPUTSELECT
key_star => close_state.OUTPUTSELECT
key_star => close_state.OUTPUTSELECT
key_star => always7.IN0
key_sharp => always8.IN1
key_sharp => main_state.OUTPUTSELECT
key_sharp => main_state.OUTPUTSELECT
key_sharp => main_state.OUTPUTSELECT
key_sharp => main_state.OUTPUTSELECT
key_sharp => main_state.OUTPUTSELECT
key_sharp => main_state.OUTPUTSELECT
key_sharp => main_state.OUTPUTSELECT
key_sharp => main_state.OUTPUTSELECT
key_sharp => main_state.OUTPUTSELECT
key_sharp => main_state.OUTPUTSELECT
key_sharp => close_state.OUTPUTSELECT
key_sharp => close_state.OUTPUTSELECT
key_sharp => close_state.OUTPUTSELECT
key_sharp => always7.IN1
led_end => pipo_state.OUTPUTSELECT
led_end => pipo_state.OUTPUTSELECT
led_end => pipo_state.OUTPUTSELECT
led_end => pipo_state.OUTPUTSELECT
led_end => pipo_state.OUTPUTSELECT
led_end => pipo_state.OUTPUTSELECT
led_on <= led_on~reg0.DB_MAX_OUTPUT_PORT_TYPE
buzzer_state[0] <= buzzer_state[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buzzer_state[1] <= buzzer_state[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buzzer_state[2] <= buzzer_state[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_state[0] <= display_state[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_state[1] <= display_state[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_state[2] <= display_state[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_on <= display_on~reg0.DB_MAX_OUTPUT_PORT_TYPE
i0[0] <= i0[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i0[1] <= i0[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i0[2] <= i0[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i0[3] <= i0[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i1[0] <= i1[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i1[1] <= i1[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i1[2] <= i1[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i1[3] <= i1[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i2[0] <= i2[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i2[1] <= i2[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i2[2] <= i2[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i2[3] <= i2[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i3[0] <= i3[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i3[1] <= i3[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i3[2] <= i3[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i3[3] <= i3[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i4[0] <= i4[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i4[1] <= i4[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i4[2] <= i4[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i4[3] <= i4[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i5[0] <= i5[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i5[1] <= i5[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i5[2] <= i5[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i5[3] <= i5[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|DOOR_LOCK|MAIN_FSM:main_machin|COUNTER_FOR_TIME_TO_CLOSE:cfttc
clk => t~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => count[32].CLK
clk => count[33].CLK
clk => count[34].CLK
clk => count[35].CLK
reset => t~reg0.ACLR
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
reset => count[32].ACLR
reset => count[33].ACLR
reset => count[34].ACLR
reset => count[35].ACLR
t <= t~reg0.DB_MAX_OUTPUT_PORT_TYPE


|DOOR_LOCK|MAIN_FSM:main_machin|COUNTER_FOR_TIME_FOR_FAIL:cftff
clk => t~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => count[32].CLK
clk => count[33].CLK
clk => count[34].CLK
clk => count[35].CLK
clk => count[36].CLK
clk => count[37].CLK
clk => count[38].CLK
clk => count[39].CLK
clk => count[40].CLK
clk => count[41].CLK
clk => count[42].CLK
clk => count[43].CLK
clk => count[44].CLK
clk => count[45].CLK
clk => count[46].CLK
clk => count[47].CLK
clk => count[48].CLK
clk => count[49].CLK
clk => count[50].CLK
clk => count[51].CLK
clk => count[52].CLK
clk => count[53].CLK
clk => count[54].CLK
clk => count[55].CLK
clk => count[56].CLK
clk => count[57].CLK
clk => count[58].CLK
clk => count[59].CLK
clk => count[60].CLK
clk => count[61].CLK
clk => count[62].CLK
clk => count[63].CLK
reset => t~reg0.ACLR
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
reset => count[32].ACLR
reset => count[33].ACLR
reset => count[34].ACLR
reset => count[35].ACLR
reset => count[36].ACLR
reset => count[37].ACLR
reset => count[38].ACLR
reset => count[39].ACLR
reset => count[40].ACLR
reset => count[41].ACLR
reset => count[42].ACLR
reset => count[43].ACLR
reset => count[44].ACLR
reset => count[45].ACLR
reset => count[46].ACLR
reset => count[47].ACLR
reset => count[48].ACLR
reset => count[49].ACLR
reset => count[50].ACLR
reset => count[51].ACLR
reset => count[52].ACLR
reset => count[53].ACLR
reset => count[54].ACLR
reset => count[55].ACLR
reset => count[56].ACLR
reset => count[57].ACLR
reset => count[58].ACLR
reset => count[59].ACLR
reset => count[60].ACLR
reset => count[61].ACLR
reset => count[62].ACLR
reset => count[63].ACLR
t <= t~reg0.DB_MAX_OUTPUT_PORT_TYPE


|DOOR_LOCK|MAIN_FSM:main_machin|COUNTER_FOR_TIME_ONE_MINUTE:cftom
clk => t~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => count[32].CLK
clk => count[33].CLK
clk => count[34].CLK
clk => count[35].CLK
clk => count[36].CLK
clk => count[37].CLK
clk => count[38].CLK
clk => count[39].CLK
clk => count[40].CLK
clk => count[41].CLK
reset => t~reg0.ACLR
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
reset => count[32].ACLR
reset => count[33].ACLR
reset => count[34].ACLR
reset => count[35].ACLR
reset => count[36].ACLR
reset => count[37].ACLR
reset => count[38].ACLR
reset => count[39].ACLR
reset => count[40].ACLR
reset => count[41].ACLR
t <= t~reg0.DB_MAX_OUTPUT_PORT_TYPE


|DOOR_LOCK|KEYPAD_MODULE:module_key
key_col[0] <= key_col[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_col[1] <= key_col[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_col[2] <= key_col[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_col[3] <= key_col[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_row[0] => Equal3.IN3
key_row[0] => Equal4.IN3
key_row[0] => Equal5.IN3
key_row[0] => Equal6.IN0
key_row[1] => Equal3.IN2
key_row[1] => Equal4.IN2
key_row[1] => Equal5.IN0
key_row[1] => Equal6.IN3
key_row[2] => Equal3.IN1
key_row[2] => Equal4.IN0
key_row[2] => Equal5.IN2
key_row[2] => Equal6.IN2
key_row[3] => Equal3.IN0
key_row[3] => Equal4.IN1
key_row[3] => Equal5.IN1
key_row[3] => Equal6.IN1
clk => count_3k[0].CLK
clk => count_3k[1].CLK
clk => count_3k[2].CLK
clk => count_3k[3].CLK
clk => count_3k[4].CLK
clk => count_3k[5].CLK
clk => count_3k[6].CLK
clk => count_3k[7].CLK
clk => count_3k[8].CLK
clk => count_3k[9].CLK
clk => count_3k[10].CLK
clk => count_3k[11].CLK
clk => count_3k[12].CLK
clk => count_3k[13].CLK
clk => count_3k[14].CLK
clk => count_3k[15].CLK
clk => clock_5khz.CLK
clk => count_time_key[0].CLK
clk => count_time_key[1].CLK
clk => count_time_key[2].CLK
clk => count_time_key[3].CLK
clk => time_key.CLK
clk => m_sec.CLK
clk => count_m_sec[0].CLK
clk => count_m_sec[1].CLK
clk => count_m_sec[2].CLK
clk => count_m_sec[3].CLK
clk => count_m_sec[4].CLK
clk => count_m_sec[5].CLK
clk => count_m_sec[6].CLK
clk => count_m_sec[7].CLK
clk => count_m_sec[8].CLK
clk => count_m_sec[9].CLK
clk => count_m_sec[10].CLK
clk => count_m_sec[11].CLK
clk => count_m_sec[12].CLK
clk => count_m_sec[13].CLK
clk => count_m_sec[14].CLK
clk => count_m_sec[15].CLK
clk => count_m_sec[16].CLK
clk => count_m_sec[17].CLK
clk => count_m_sec[18].CLK
clk => count_m_sec[19].CLK
clk => count_m_sec[20].CLK
clk => count_m_sec[21].CLK
clk => count_m_sec[22].CLK
clk => count_m_sec[23].CLK
clk => count_m_sec[24].CLK
clk => count_m_sec[25].CLK
clk => count_m_sec[26].CLK
clk => count_m_sec[27].CLK
clk => count_m_sec[28].CLK
clk => count_m_sec[29].CLK
clk => count_m_sec[30].CLK
clk => count_m_sec[31].CLK
key_value[0] <= key_value[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_value[1] <= key_value[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_value[2] <= key_value[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_value[3] <= key_value[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_number <= key_number~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_star <= key_star~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_sharp <= key_sharp~reg0.DB_MAX_OUTPUT_PORT_TYPE
buzz_key <= buzz_key~reg0.DB_MAX_OUTPUT_PORT_TYPE


|DOOR_LOCK|LED_OUTPUT_CONTROLLER:led_control
led_on => Selector32.IN19
led_on => Selector1.IN0
led_on => Selector0.IN20
led_end <= led_end$latch.DB_MAX_OUTPUT_PORT_TYPE
reset => internal_state.OUTPUTSELECT
reset => internal_state.OUTPUTSELECT
reset => internal_state.OUTPUTSELECT
reset => internal_state.OUTPUTSELECT
reset => internal_state.OUTPUTSELECT
reset => internal_state.OUTPUTSELECT
reset => internal_state.OUTPUTSELECT
reset => internal_state.OUTPUTSELECT
reset => internal_state.OUTPUTSELECT
reset => internal_state.OUTPUTSELECT
reset => internal_state.OUTPUTSELECT
reset => internal_state.OUTPUTSELECT
reset => internal_state.OUTPUTSELECT
reset => internal_state.OUTPUTSELECT
reset => internal_state.OUTPUTSELECT
reset => internal_state.OUTPUTSELECT
reset => internal_state.OUTPUTSELECT
reset => internal_state.OUTPUTSELECT
reset => internal_state.OUTPUTSELECT
reset => internal_state.10010.IN1
clk => clk.IN2
led[7] <= led[7]$latch.DB_MAX_OUTPUT_PORT_TYPE
led[6] <= led[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
led[5] <= led[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
led[4] <= led[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
led[3] <= led[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
led[2] <= led[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
led[1] <= led[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
led[0] <= led[0]$latch.DB_MAX_OUTPUT_PORT_TYPE


|DOOR_LOCK|LED_OUTPUT_CONTROLLER:led_control|COUNTER_FOR_TIME_T:cftt1
time_t <= time_t~reg0.DB_MAX_OUTPUT_PORT_TYPE
reset => time_t~reg0.ACLR
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
clk => time_t~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK


|DOOR_LOCK|LED_OUTPUT_CONTROLLER:led_control|COUNTER_FOR_TIME_T:cftt2
time_t <= time_t~reg0.DB_MAX_OUTPUT_PORT_TYPE
reset => time_t~reg0.ACLR
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
clk => time_t~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK


|DOOR_LOCK|SEVEN_SEGMENT_CONTROLLER:sevenM
clk => temp_seg[0].CLK
clk => temp_seg[1].CLK
clk => temp_seg[2].CLK
clk => temp_seg[3].CLK
clk => temp_seg[4].CLK
clk => temp_seg[5].CLK
clk => temp_seg[6].CLK
clk => temp_seg[7].CLK
clk => temp_num[0].CLK
clk => temp_num[1].CLK
clk => temp_num[2].CLK
clk => temp_num[3].CLK
clk => fnd_clock.CLK
clk => fnd_count[0].CLK
clk => fnd_count[1].CLK
clk => fnd_count[2].CLK
clk => fnd_count[3].CLK
clk => fnd_count[4].CLK
clk => fnd_count[5].CLK
clk => fnd_count[6].CLK
clk => fnd_count[7].CLK
clk => fnd_count[8].CLK
clk => fnd_count[9].CLK
display_state[0] => Mux7.IN10
display_state[0] => Mux8.IN10
display_state[0] => Mux9.IN10
display_state[0] => Mux10.IN10
display_state[0] => Mux11.IN10
display_state[0] => Mux12.IN10
display_state[0] => Mux13.IN10
display_state[0] => Mux14.IN10
display_state[1] => Mux7.IN9
display_state[1] => Mux8.IN9
display_state[1] => Mux9.IN9
display_state[1] => Mux10.IN9
display_state[1] => Mux11.IN9
display_state[1] => Mux12.IN9
display_state[1] => Mux13.IN9
display_state[1] => Mux14.IN9
display_state[2] => Mux7.IN8
display_state[2] => Mux8.IN8
display_state[2] => Mux9.IN8
display_state[2] => Mux10.IN8
display_state[2] => Mux11.IN8
display_state[2] => Mux12.IN8
display_state[2] => Mux13.IN8
display_state[2] => Mux14.IN8
display_on => seg_data.OUTPUTSELECT
display_on => seg_data.OUTPUTSELECT
display_on => seg_data.OUTPUTSELECT
display_on => seg_data.OUTPUTSELECT
display_on => seg_data.OUTPUTSELECT
display_on => seg_data.OUTPUTSELECT
display_on => seg_data.OUTPUTSELECT
display_on => seg_data.OUTPUTSELECT
display_on => fnd_state.OUTPUTSELECT
display_on => fnd_state.OUTPUTSELECT
display_on => fnd_state.OUTPUTSELECT
display_on => fnd_state.OUTPUTSELECT
display_on => fnd_state.OUTPUTSELECT
display_on => fnd_state.OUTPUTSELECT
display_on => seg_pos[0]~reg0.ENA
display_on => seg_pos[1]~reg0.ENA
display_on => seg_pos[2]~reg0.ENA
display_on => seg_pos[3]~reg0.ENA
display_on => seg_pos[4]~reg0.ENA
display_on => seg_pos[5]~reg0.ENA
i0[0] => Selector3.IN0
i0[1] => Selector2.IN0
i0[2] => Selector1.IN0
i0[3] => Selector0.IN0
i1[0] => Selector3.IN1
i1[1] => Selector2.IN1
i1[2] => Selector1.IN1
i1[3] => Selector0.IN1
i2[0] => Selector3.IN2
i2[1] => Selector2.IN2
i2[2] => Selector1.IN2
i2[3] => Selector0.IN2
i3[0] => Selector3.IN3
i3[1] => Selector2.IN3
i3[2] => Selector1.IN3
i3[3] => Selector0.IN3
i4[0] => Selector3.IN4
i4[1] => Selector2.IN4
i4[2] => Selector1.IN4
i4[3] => Selector0.IN4
i5[0] => Selector3.IN5
i5[1] => Selector2.IN5
i5[2] => Selector1.IN5
i5[3] => Selector0.IN5
seg_data[0] <= seg_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_data[1] <= seg_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_data[2] <= seg_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_data[3] <= seg_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_data[4] <= seg_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_data[5] <= seg_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_data[6] <= seg_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_data[7] <= seg_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_pos[0] <= seg_pos[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_pos[1] <= seg_pos[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_pos[2] <= seg_pos[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_pos[3] <= seg_pos[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_pos[4] <= seg_pos[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_pos[5] <= seg_pos[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|DOOR_LOCK|SOUND_GENERATOR_WITH_BUZZER:buzzerM
clk => clk.IN2
reset => internal_state.OUTPUTSELECT
reset => internal_state.OUTPUTSELECT
reset => internal_state.OUTPUTSELECT
reset => internal_state.OUTPUTSELECT
reset => internal_state.OUTPUTSELECT
reset => internal_state.OUTPUTSELECT
reset => err_on.OUTPUTSELECT
reset => open_on.OUTPUTSELECT
reset => key_on.OUTPUTSELECT
reset => open_internal_state.OUTPUTSELECT
reset => open_internal_state.OUTPUTSELECT
reset => open_internal_state.OUTPUTSELECT
reset => err_internal_state.OUTPUTSELECT
reset => err_internal_state.OUTPUTSELECT
reset => err_internal_state.OUTPUTSELECT
reset => lock_internal_state.OUTPUTSELECT
reset => lock_internal_state.OUTPUTSELECT
reset => lock_internal_state.OUTPUTSELECT
reset => lock_internal_state.OUTPUTSELECT
reset => pipo_internal_state.OUTPUTSELECT
reset => pipo_internal_state.OUTPUTSELECT
reset => pipo_internal_state.OUTPUTSELECT
reset => pipo_internal_state.OUTPUTSELECT
buzzer_state[0] => previous_buzzer_state[0].DATAIN
buzzer_state[0] => Equal0.IN1
buzzer_state[0] => Equal1.IN31
buzzer_state[0] => Equal2.IN0
buzzer_state[0] => Equal4.IN31
buzzer_state[1] => previous_buzzer_state[1].DATAIN
buzzer_state[1] => Equal0.IN0
buzzer_state[1] => Equal1.IN30
buzzer_state[1] => Equal2.IN31
buzzer_state[1] => Equal4.IN0
buzzer_state[2] => previous_buzzer_state[2].DATAIN
buzzer_state[2] => Equal0.IN31
buzzer_state[2] => Equal1.IN0
buzzer_state[2] => Equal2.IN30
buzzer_state[2] => Equal4.IN30
buzz_key => always0.IN1
buzz_key => previous_buzz_key.DATAIN
buzz_key => key_on.OUTPUTSELECT
buzz <= buzz~reg0.DB_MAX_OUTPUT_PORT_TYPE


|DOOR_LOCK|SOUND_GENERATOR_WITH_BUZZER:buzzerM|COUNTER_FOR_SHORT_TIME:cfst
clk => t~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => count[32].CLK
reset => t~reg0.ACLR
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
reset => count[32].ACLR
t <= t~reg0.DB_MAX_OUTPUT_PORT_TYPE


|DOOR_LOCK|SOUND_GENERATOR_WITH_BUZZER:buzzerM|COUNTER_FOR_FIFTEN_SEC:cffs
clk => t~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => count[32].CLK
clk => count[33].CLK
clk => count[34].CLK
clk => count[35].CLK
reset => t~reg0.ACLR
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
reset => count[32].ACLR
reset => count[33].ACLR
reset => count[34].ACLR
reset => count[35].ACLR
t <= t~reg0.DB_MAX_OUTPUT_PORT_TYPE


